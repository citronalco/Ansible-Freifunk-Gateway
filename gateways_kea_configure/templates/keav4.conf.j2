{

"Dhcp4": {
    "loggers": [
      {
        "name": "kea-dhcp4",
        "output_options": [
          {
            "output": "stdout"
          }
        ],
        "severity": "warn"
      }
    ],

    "option-def": [
{% if kea.global.option43_unifi_ip is defined and kea.global.option43_unifi_ip %}
      {
        "name": "vendor-encapsulated-options",
        "space": "vendor-encapsulated-options-space",
        "code": 43,
        "type": "string",
        "array": false
      },
{% endif %}
      {
        "name": "dns-search-list",
        "space": "dns-search-list-space",
        "code": 119,
        "type": "fqdn",
        "array": true
      }
    ],

    "interfaces-config": {
        "interfaces": [ {% for domaene in domaenenliste|dictsort %}"bat{{domaene[0]}}"{% if not loop.last %}, {% endif %}{% endfor %} ]
    },

    "control-socket": {
        "socket-type": "unix",
        "socket-name": "/tmp/kea4-ctrl-socket"
    },

    "lease-database": {
        "type": "memfile",
        "lfc-interval": 3600,
        "name": "/var/lib/kea/kea-leases4.csv"
    },

    "expired-leases-processing": {
{% for attribute in kea.expired_leases %}
        "{{attribute.name}}": {{attribute.value}}{% if not loop.last %},{% endif %}

{% endfor %}
    },

        "valid-lifetime": {{kea.global.lease_default}},

        "option-data": [
{% if kea.global.option43_unifi_ip is defined and kea.global.option43_unifi_ip %}
            {
                "name": "vendor-encapsulated-options",
                "space": "vendor-encapsulated-options-space",
                "code": 43,
                "data": "01:04:{{ kea.global.option43_unifi_ip | ansible.utils.ip4_hex(':') }}"
            },
{% endif %}
            {
                "name": "interface-mtu",
                "code": 26,
                "space": "dhcp4",
                "csv-format": true,
                "data": "{{kea.global.mtu}}"
            }
        ],

        "subnet4": [
{% for domaene in domaenenliste|dictsort %}
            {
                "subnet": "{{domaenen[domaene[0]].ffv4_network}}",
                "interface": "bat{{domaene[0]}}",
                "id" : {{domaene[0]}},
                "pools": [ 
                    { "pool": "{{domaene[1].dhcp_start}} - {{domaene[1].dhcp_ende}}" } 
                ],
{% if domaenen[domaene[0]].dhcp is defined and domaenen[domaene[0]].dhcp.reservations is defined %}
                "reservations" : [
{% for host in domaenen[domaene[0]].dhcp.reservations %}
                    {
                        "hw-address" : "{{host.id}}",
                        "ip-address" : "{{host.ip}}"
                    }{% if not loop.last %},{% endif %}
{% endfor %}

                ],
{% endif %}
                "option-data": [ 
                    {
                        "name": "routers",
                        "code": 3,
                        "space": "dhcp4",
                        "csv-format": true,
                        "data": "{{domaenen[domaene[0]].ffv4_network | ansible.utils.ipaddr(domaene[1].server_id) | ansible.utils.ipaddr('address') }}{% if kea.routers.all_gateways is defined and kea.routers.all_gateways == True %}{% for gateway in groups['gateways'] %}{% if gateway != inventory_hostname and hostvars[gateway].domaenenliste is defined and domaene[0] in hostvars[gateway].domaenenliste %}, {{domaenen[domaene[0]].ffv4_network | ansible.utils.ipaddr(hostvars[gateway].domaenenliste[domaene[0]].server_id) | ansible.utils.ipaddr('address') }}{% endif %}{% endfor %}{% endif %}"
                    },
                    {
                        "name": "domain-name-servers",
                        "code": 6,
                        "space": "dhcp4",
                        "csv-format": true,
                        "data": "{{domaenen[domaene[0]].ffv4_network | ansible.utils.ipaddr(domaene[1].server_id) | ansible.utils.ipaddr('address') }}{% if kea.dns.all_gateways is defined and kea.dns.all_gateways == True %}{% for gateway in groups['gateways'] %}{% if gateway != inventory_hostname and hostvars[gateway].domaenenliste is defined and domaene[0] in hostvars[gateway].domaenenliste %}, {{domaenen[domaene[0]].ffv4_network | ansible.utils.ipaddr(hostvars[gateway].domaenenliste[domaene[0]].server_id) | ansible.utils.ipaddr('address') }}{% endif %}{% endfor %}{% endif %}{% if kea.dns.additional %}{% for entry in kea.dns.additional %}, {{entry}}{% endfor %}{% endif %}"
                    },
                    {
                        "name": "domain-name",
                        "code": 15,
                        "space": "dhcp4",
                        "csv-format": true,
                        "data": "{{kea.global.search_domain}}"
                    },
                    {
                        "name": "dns-search-list",
                        "data": "{{ kea.global.dns_search_list | join(', ') }}",
                        "space": "dns-search-list-space"
                    }
                ]
            }{% if not loop.last %},{% endif %}
{% endfor %}
        ]
    },
}
